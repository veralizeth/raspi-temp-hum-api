package com.tempo.tempehum.accessingdatapostgres.controller;
import com.tempo.tempehum.accessingdatapostgres.model.Device;
import com.tempo.tempehum.accessingdatapostgres.model.User;
import com.tempo.tempehum.accessingdatapostgres.repository.DeviceRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@RequestMapping(path="/devices")
public class DevicesController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private DeviceRepository deviceRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewDevice (@RequestParam String deviceName
            , @RequestParam User user) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Device d = new Device();
        d.setDeviceName(deviceName);
        deviceRepository.save(d);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Device> getAllDevices() {
        // This returns a JSON or XML with the users
        return deviceRepository.findAll();

    }
}